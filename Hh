import os
import re
import asyncio
from telethon import TelegramClient, events
from telethon.sessions import StringSession

# ================= НАСТРОЙКИ =================
API_ID = 123456            # твой API_ID от my.telegram.org
API_HASH = 'your_api_hash' # твой API_HASH
SESSION_STRING = ''        # вставь сюда свою StringSession
RECIPIENT = 'username_or_id'  # куда пересылать код
DELETE_AFTER = 20          # сек. до удаления сообщения у получателя (0 чтобы не удалять)
CODE_MIN_LEN = 4           # минимальная длина кода
CODE_MAX_LEN = 8           # максимальная длина кода
# ============================================

# Регулярка для поиска кода (только цифры)
CODE_RE = re.compile(r'\b\d{' + str(CODE_MIN_LEN) + r',' + str(CODE_MAX_LEN) + r'}\b')

# Создаем клиент Telethon
client = TelegramClient(StringSession(SESSION_STRING), API_ID, API_HASH)

@client.on(events.NewMessage(incoming=True))
async def handler(event):
    try:
        sender = await event.get_sender()
        if getattr(sender, "id", None) == 777000:  # системный Telegram
            text = event.raw_text or ""
            match = CODE_RE.search(text)
            if match:
                code = match.group()
                sent = await client.send_message(RECIPIENT, f"{code}")  # только цифры
                print("Sent code:", code)
                if DELETE_AFTER > 0:
                    await asyncio.sleep(DELETE_AFTER)
                    await client.delete_messages(RECIPIENT, sent.id)
            else:
                print("No code found in the message.")
    except Exception as e:
        print("Handler error:", e)

async def main():
    await client.start()
    me = await client.get_me()
    print(f"Running as: {me.id} ({me.username or me.first_name})")
    print("Listening for Telegram service messages...")
    await client.run_until_disconnected()

if __name__ == "__main__":
    asyncio.run(main())
